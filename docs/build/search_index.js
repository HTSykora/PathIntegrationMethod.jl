var documenterSearchIndex = {"docs":
[{"location":"pathintegrationmethod/#Other-Page","page":"PathIntegration","title":"Other Page","text":"","category":"section"},{"location":"pathintegrationmethod/","page":"PathIntegration","title":"PathIntegration","text":"This is something different","category":"page"},{"location":"pathintegrationmethod/","page":"PathIntegration","title":"PathIntegration","text":"PathIntegration","category":"page"},{"location":"pathintegrationmethod/#PathIntegrationMethod.PathIntegration","page":"PathIntegration","title":"PathIntegrationMethod.PathIntegration","text":"PathIntegration(sde, method, ts, axes...; kwargs...)\n\nCompute a PathIntegration object for computing the response probability density function evolution of the stochastic dynamical system defined by sde.\n\nArguments\n\nsde::AbstractSDE{d,k,m}: d-dimensional dynamic system which is subjected to an m-dimensional Wiener process acting on the kd coordinates.\nmethod::DiscreteTimeSteppingMethod: method used for the time-discretisation of the dynamical system described by sde. \nts::Union{Number,AbstractArray{<:Number}}: If AbstractArray{<:Number} is provided then the stepMX-s between the times in ts are computed. If Number is provided, then it computes a single stepMX is computed between 0 and ts.\naxes::Vararg{aT,d} where aT<:GridAxis: The axes spanning the space where the transitional PDF is computed for the dynamical system sde.\n\nKeyword Arguments\n\ndiscreteintegrator = d==k ? QuadGKIntegrator() : ClenshawCurtisIntegrator(): Discrete integrator to evaluate the Chapman-Kolmogorov equation\ndi_N = 21: Resolution of the discrete integrator. Can be an NTuple{d-k+1,<:Integer} or an AbstractArray{<:Integer} to define resolution to each integration variable\nsmart_integration = true: Only integrate where the transitional PDF has nonzero elements. It is approximated with the step function. Use false if (time step * diffusion) results in a wide TPDF. Usually true is the better choice.\nint_limit_thickness_multiplier = 6: The \"thickness\" scaling of the TPDF during smart integration.\ninitialise_pdf = true: Initialize the response probability density function. If false, then the RPDF is initialzed as p(x) ≡ 0.\nf_init = nothing: Initial RPDF as a function. If f_init is a Nothing and initialise_pdf = true then a diagonal Gaussian distribution is used as initial distribution\nμ_init = nothing: Mean of the initial Gaussian distribution. \nNothing: Uses the middle of the range defined by the axis\nNumber: Uses the single value μ_init for each axis direction\nUnion{NTuple{d,<:Number},AbstractVector{<:Number}}: Individual means for each axis.\nσ_init = nothing: Standard deviation of the initial diagonal Gaussian distribution. \nNothing: Uses the 1/12th of the range width in each direction defined by the axes.\nNumber: Uses the single value σ_init for each axis direction\nUnion{NTuple{d,<:Number},AbstractVector{<:Number}}: Individual standard deviations for each axis.\npre_compute = true: Compute the stepMX. This should be left unchanged if the RPDF computation is the goal.\n\n\n\nFor methods, discrete integrators, interpolators, and examples please refer to the documentation. \n\n\n\n\n\n","category":"type"},{"location":"#PathIntegrationMethod.jl","page":"Home","title":"PathIntegrationMethod.jl","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Path integration method to compute the response probability density functions of SDEs.","category":"page"},{"location":"#Package-features","page":"Home","title":"Package features","text":"","category":"section"},{"location":"#Path-integration-method","page":"Home","title":"Path integration method","text":"","category":"section"},{"location":"#Citing","page":"Home","title":"Citing","text":"","category":"section"}]
}
